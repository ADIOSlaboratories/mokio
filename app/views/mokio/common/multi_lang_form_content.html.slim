.content
  = common_form do
    .row-fluid
      = simple_form_for obj, :html => { :class => 'form-horizontal' } do |g|
        = g.input :main_pic
        = g.input :title, disabled: !obj.display_editable_field?('title')
        = g.input :display_from, :wrapper => :date, :as => :string,   :input_html => { :class => "mask-date display_from", :value => (localize(g.object.display_from, :format => :datepicker) if g.object.display_from) },  disabled: !obj.display_editable_field?('display_from')
        = g.input :display_to, :wrapper => :date, :as => :string,   :input_html => { :class => "mask-date display_to", :value => (localize(g.object.display_to, :format => :datepicker) if g.object.display_to) },  disabled: !obj.display_editable_field?('display_to')
        = g.input :active, :wrapper => :active_checkbox, disabled: !obj.display_editable_field?('active')
        = g.input :home_page, :wrapper => :active_checkbox, disabled: !obj.display_editable_field?('home_page')

        ul#langContentTab.nav.nav-tabs
          -@contents.each_with_index do |content,i|
            li class=(i == 0 ? "in active":" ") id="nav_lang_#{content.lang_id}"
              a href="#lang_#{content.lang_id}"
                =content.lang.name.html_safe
                i.icon12
        .tab-content
          hr
          -@contents.each_with_index do |content,i|
            .tab-pane.fade id="lang_#{content.lang_id}" class=(i == 0 ? "in active":" ")
              = g.simple_fields_for :contents,content do |lf|
                = render :partial => "mokio/common/multi_lang_gmap", locals: {obj: content, f: lf} if obj.class.has_gmap_enabled?
                = render :partial => "mokio/common/multi_lang_meta", locals: {obj: content, f: lf}  if content.class.has_meta_enabled?
                = lf.input :form_active, :label => I18n.t('backend.form_active'), :as => :boolean, :input_html => { :checked => (true if content.title.present? ) ,:contentForm => "content_form_#{content.lang_id}"}
                /-if content.base_content_id.nil?
                /  .row-fluid
                /    label.form-label.span2
                /      = t('menus.content_assoc')
                /    .span10
                /      = lf.collection_select(:base_content_id, @contents_select.where('lang_id = ? OR lang_id IS NULL',content.lang_id), :id, :title ,:include_blank => true)

                .content_form id="content_form_#{content.lang_id}"
                  = render :partial => "#{ obj.class.to_s.tableize}/multi_lang_form", :locals => {f: g, obj: content,lf:lf}

        - cache [:form_buttons, obj] do
          .form-actions
            = btn_submit bt("save")
            = btn_submit bt("save_and_create_new"), true
            = btn_cancel "#{engine_root}#{obj.class.to_s.tableize.gsub("mokio/", "")}"
        - if has_data_files?(obj) && params[:action] == "edit" && obj.default_data_file != Mokio::Youtube
          = render :template => "mokio/data_files/uploader" , locals: {obj: obj, f: g}
        - if has_data_files?(obj) && obj.default_data_file == Mokio::Youtube && params[:action] == "edit"
          = render :template => "mokio/youtubes/uploader" , locals: {obj: obj, f: g}
    - if has_data_files?(obj) && params[:action] == "edit"
      = render :partial => "#{obj.default_data_file.to_s.tableize}/gallery", :locals => {videos: @videos}

= render :partial => "mokio/common/datepicker_settings"
-content_for :js do
  = javascript_include_tag 'backend/forms'

  - if has_data_files?(obj) && params[:action] == "edit"
    = javascript_include_tag "backend/galleries"

  - if params[:action] == "new" && has_data_files?(obj)
    = flash_message(bt("cannot_add_files_now", @obj_class))
